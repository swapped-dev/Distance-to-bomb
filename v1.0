/*
 * AMX Mod plugin
 *
 * test, v1.0
 *
 * (c) Copyright 2014 - dede
 * This file is provided as is (no warranties).
 *
 */

/*
 * Description:
 * 
 *	This plugin is show how many meters left until you find the bomb ( after is planted ofcourse )
 *
 *
 *
 * Command(s):
 * 
 *
 * Cvar(s):
 * 
 *	- empty -
 *
 * Requirement(s):
 * 
 *
 *		AMX MOD 2010 or higher++;
 * Setup:
 * 
 *
 * Configuration:
 * 
 *
 * Credit(s):
 * 		AMX MOD DEV - helping me find the c4 entity ID + developing the amxmod <3
 *		ezio_auditore - the idea
 *
 *
 * Changelog:
 * 		v1.0
 *			o First launch
 *
 */

/******************************************************************************/
// If you change one of the following settings, do not forget to recompile
// the plugin and to install the new .amx file on your server.
// You can find the list of admin flags in the amx/examples/include/amxconst.inc file.
/******************************************************************************/

#include <amxmod>
#include <VexdUM>
#include <VexdUM_stock>
#include <csstats>

new const PLUGIN [] = "Distance from the bomb";
new const VERSION [] = "1.0";
new const AUTHOR [] = "Swapped";

new bool:IsDef;
new g_iC4EntityID;

public plugin_init()
{
	register_plugin (PLUGIN, VERSION, AUTHOR );
    
	register_logevent("rsh", 2, "1=Round_Start");
}

public rsh(  ) IsDef = true;

public bomb_planted( id )
{
	IsDef = false;
        
	new iEntityID = -1
        
	while((iEntityID = find_entity(iEntityID, "grenade")) > 0) 
	{    
		if(get_offset_int(iEntityID, 96, 5) & (1<<8)) 
		{
			g_iC4EntityID = iEntityID
			break; 
		}
	}
    
	new Players[32] 
	new playerCount, i
    
	get_players(Players, playerCount, "a") 
    
	for (i=0; i<playerCount; i++) 
	{
		new x = Players[ i ];
		bomb_distance_hud( x );
	}
}

public bomb_distance_hud( id )
{
	new float:UserOrigin[ 3 ];
	get_user_origin(id, UserOrigin );
	new distance = get_entity_distance(id, g_iC4EntityID )

	if( IsDef == true )
	{
		remove_task( id );
	}

	if( is_user_alive( id ) && !IsDef )
	{
		set_hudmessage(0, 255, 0, 0.03, 0.38, 0, 6.0, 1.0)
		show_hudmessage( id, "Distance to the bomb: %d", floatround( distance / 100.00 ) );
	}
	else
	{
		remove_task( id );
	}
    
	set_task( 1.0, "bomb_distance_hud", id );
}

public bomb_defused( id )
{
	IsDef = true;
}


public bomb_exploded(planter,defuser)
{
	IsDef = true;
}
